# We could use `@actions-rs/cargo` Action ability to automatically install `cross` tool
# in order to compile our application for some unusual targets.

on:
  create:
    tags:
      - v*

name: Cross-compile

jobs:
  build:
    name: Build tool
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - arm-unknown-linux-gnueabi
          # - aarch64-unknown-linux-gnu
          # - i686-unknown-linux-gnu
          # - x86_64-unknown-linux-gnu
        tool:
          - fd
          - sd
          - rg
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true
      - name: Cargo build
        uses: marcopolo/cargo@master
        with:
          command: build
          working-directory: tools/${{ matrix.tool }}
          use-cross: true
          args: --verbose --release --target ${{ matrix.target }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: tools/${{ matrix.tool }}/target/${{ matrix.target }}/release/${{ matrix.tool }}
          asset_name: ${{ matrix.tool }}-${{ matrix.target }}
          asset_content_type: application/octet-stream
